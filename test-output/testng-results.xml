<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="8412" started-at="2021-11-27T13:34:33 IST" finished-at="2021-11-27T13:34:42 IST">
    <groups>
    </groups>
    <test name="TestCase" duration-ms="8412" started-at="2021-11-27T13:34:33 IST" finished-at="2021-11-27T13:34:42 IST">
      <class name="com.automation.testcases.ui.TestCase1">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="beforeClass" is-config="true" duration-ms="1" started-at="2021-11-27T13:34:40 IST" finished-at="2021-11-27T13:34:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethodClass()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="beforeMethodClass" is-config="true" duration-ms="0" started-at="2021-11-27T13:34:40 IST" finished-at="2021-11-27T13:34:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodClass -->
        <test-method status="PASS" signature="Testcase_Google()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="Testcase_Google" duration-ms="2014" started-at="2021-11-27T13:34:40 IST" finished-at="2021-11-27T13:34:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testcase_Google -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="getResult" is-config="true" duration-ms="0" started-at="2021-11-27T13:34:42 IST" finished-at="2021-11-27T13:34:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Testcase_Google status=SUCCESS method=TestCase1.Testcase_Google()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethodClass()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="beforeMethodClass" is-config="true" duration-ms="1" started-at="2021-11-27T13:34:42 IST" finished-at="2021-11-27T13:34:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodClass -->
        <test-method status="FAIL" signature="Testcase_Google2()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="Testcase_Google2" duration-ms="2" started-at="2021-11-27T13:34:42 IST" finished-at="2021-11-27T13:34:42 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ansd] but found [abcd]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ansd] but found [abcd]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.automation.testcases.ui.TestCase1.Testcase_Google2(TestCase1.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testcase_Google2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="getResult" is-config="true" duration-ms="1" started-at="2021-11-27T13:34:42 IST" finished-at="2021-11-27T13:34:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Testcase_Google2 status=FAILURE method=TestCase1.Testcase_Google2()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.automation.testcases.ui.TestCase1@536aaa8d]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-11-27T13:34:42 IST" finished-at="2021-11-27T13:34:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.automation.testcases.ui.TestCase1 -->
      <class name="com.automation.testcases.ui.TestCaseClass">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="beforeSuite" is-config="true" duration-ms="109" started-at="2021-11-27T13:34:33 IST" finished-at="2021-11-27T13:34:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="beforeClass" is-config="true" duration-ms="1" started-at="2021-11-27T13:34:33 IST" finished-at="2021-11-27T13:34:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethodClass()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="beforeMethodClass" is-config="true" duration-ms="3516" started-at="2021-11-27T13:34:34 IST" finished-at="2021-11-27T13:34:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodClass -->
        <test-method status="PASS" signature="returnTicket()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="returnTicket" duration-ms="2844" started-at="2021-11-27T13:34:37 IST" finished-at="2021-11-27T13:34:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- returnTicket -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="getResult" is-config="true" duration-ms="2" started-at="2021-11-27T13:34:40 IST" finished-at="2021-11-27T13:34:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=returnTicket status=SUCCESS method=TestCaseClass.returnTicket()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-11-27T13:34:40 IST" finished-at="2021-11-27T13:34:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.automation.testcases.ui.TestCaseClass@59e5ddf]" name="afterSuite" is-config="true" duration-ms="1030" started-at="2021-11-27T13:34:42 IST" finished-at="2021-11-27T13:34:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.automation.testcases.ui.TestCaseClass -->
    </test> <!-- TestCase -->
  </suite> <!-- Suite -->
</testng-results>
